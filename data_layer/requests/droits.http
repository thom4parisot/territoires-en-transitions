### Authenticate as a user
POST {{api}}/auth/v1/token?grant_type=password
apikey: {{anon}}
Content-Type: application/json

{
  "email": "{{yolo_mail}}",
  "password": "{{yolo_pass}}"
}


> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    client.log('token is ' + response.body['access_token']);
    client.global.set("auth_token", response.body['access_token']);
%}


### List droits
GET {{api}}/rest/v1/private_utilisateur_droit?select=*
apikey: {{anon}}
Authorization: Bearer {{auth_token}}


### List droits of collectivit√© 1
GET {{api}}/rest/v1/private_utilisateur_droit?collectivite_id=eq.1&select=*
apikey: {{anon}}
Authorization: Bearer {{auth_token}}


### Claim a collectivite
POST {{api}}/rest/v1/rpc/claim_collectivite
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "id": 9
}


### Quit a collectivite
POST {{api}}/rest/v1/rpc/quit_collectivite
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "id": 9
}

### Referent contact
POST {{api}}/rest/v1/rpc/referent_contacts
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "id": 9
}


### Have lecture access
POST {{api}}/rest/v1/rpc/have_lecture_acces
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "id": 1
}

### Have edition access
POST {{api}}/rest/v1/rpc/have_edition_acces
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "id": 1
}

### Have admin access
POST {{api}}/rest/v1/rpc/have_admin_acces
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "id": 1
}

### Is authenticated
POST {{api}}/rest/v1/rpc/is_authenticated
apikey: {{anon}}
Authorization: Bearer {{auth_token}}


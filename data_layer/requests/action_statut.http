### Authenticate as a user
POST {{api}}/auth/v1/token?grant_type=password
apikey: {{anon}}
Content-Type: application/json

{
  "email": "{{yolo_mail}}",
  "password": "{{yolo_pass}}"
}


> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    client.log('token is ' + response.body['access_token']);
    client.global.set("auth_token", response.body['access_token']);
%}


### List action statut
GET {{api}}/rest/v1/action_statut?select=*
apikey: {{anon}}
Authorization: Bearer {{auth_token}}

> {%
    client.test("List executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Upsert action statut
POST {{api}}/rest/v1/action_statut?on_conflict=collectivite_id,action_id
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
prefer: resolution=merge-duplicates
Content-Type: application/json

{
  "collectivite_id": 1,
  "action_id": "eci_1.1.2.1",
  "avancement": "detaille",
  "avancement_detaille": [0.2, 0.5, 0.3],
  "concerne": true
}

> {%
    client.test("Upsert executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}

### Upsert action statut on a collectivitÃ© that we have no rights on.
POST {{api}}/rest/v1/action_statut?on_conflict=collectivite_id,action_id
apikey: {{anon}}
Authorization: Bearer {{auth_token}}
prefer: resolution=merge-duplicates
Content-Type: application/json

{
  "collectivite_id": 10,
  "action_id": "eci_1.1.1.1",
  "avancement": "fait",
  "concerne": true
}

> {%
    client.test("Upsert refused", function() {
        client.assert(response.status === 403, "Response status is not 403");
    });
%}

